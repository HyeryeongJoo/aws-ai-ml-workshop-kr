# script parameters
model_id: "meta-llama/Llama-3.1-8B-Instruct"
###########################
# small samples for Debug
###########################
train_dataset_path: "../data/naver-news-summarization-ko/train"                      # path to dataset
validation_dataset_path: "../data/naver-news-summarization-ko/validation"                      # path to dataset
#test_dataset_path: "../data/naver-news-summarization-ko/test"                      # path to dataset
per_device_train_batch_size: 1         # batch size per device during training
per_device_eval_batch_size: 1          # batch size for evaluation
gradient_accumulation_steps: 1         # number of steps before performing a backward/update pass
###########################
# large samples for evaluation
###########################
# train_dataset_path: "../data/naver-news-summarization-ko/full_train"                      # path to dataset
# validation_dataset_path: "../data/naver-news-summarization-ko/full_validation"                      # path to dataset
# test_dataset_path: "../data/naver-news-summarization-ko/full_test"                      # path to dataset
# per_device_train_batch_size: 16         # batch size per device during training
# per_device_eval_batch_size: 1          # batch size for evaluation
# gradient_accumulation_steps: 2         # number of steps before performing a backward/update pass
###########################
max_seq_length:  2048              # max sequence length for model and packing of the dataset


# training parameters
output_dir: "/home/ec2-user/SageMaker/models/llama-3-1-8b-qlora-naver-news" # Temporary output directory for model checkpoints
report_to: "tensorboard"               # report metrics to tensorboard
logging_dir: "/home/ec2-user/SageMaker/logs/llama-3-1-8b-qlora-naver-news" # log folder for tensorboard
learning_rate: 0.0002                  # learning rate 2e-4
lr_scheduler_type: "constant"          # learning rate scheduler
num_train_epochs: 1                    # number of training epochs
optim: adamw_torch                     # use torch adamw optimizer
logging_steps: 10                      # log every 10 steps
save_strategy: epoch                   # save checkpoint every epoch
evaluation_strategy: epoch             # evaluate every epoch
max_grad_norm: 0.3                     # max gradient norm
warmup_ratio: 0.03                     # warmup ratio
bf16: true                             # use bfloat16 precision
tf32: true                             # use tf32 precision
gradient_checkpointing: true          # use gradient checkpointing to save memory
