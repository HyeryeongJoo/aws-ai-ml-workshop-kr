<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS Korea AI/ML Workshop on AWS Workshop</title>
    <link>/kr/</link>
    <description>Recent content in AWS Korea AI/ML Workshop on AWS Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Tue, 15 Oct 2019 15:09:31 +0900</lastBuildDate>
    
	<atom:link href="/kr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Module 1: S3 bucket과 Notebook Instance 생성하기</title>
      <link>/kr/labs/sagemaker/_module_1.html</link>
      <pubDate>Tue, 15 Oct 2019 15:16:07 +0900</pubDate>
      
      <guid>/kr/labs/sagemaker/_module_1.html</guid>
      <description>S3 Bucket 생성하기 SageMaker는 S3를 데이터와 모델 저장소로 사용합니다. 여기서는 해당 목적으로 S3 Bucket을 생성합니다. 오늘 실습에서는 N. Virginia (us-east-1) 리전을 사용합니다.
 AWS 관리 콘솔에 Sign in 합니다:  Open AWS Console  만약 AWS 측에서 Event Engine을 사용하여 임시 아이디를 생성한 경우 제공받으신 URL을 여시고 team hash code를 입력하시면 됩니다.    AWS Services 리스트에서 S3 로 이동합니다. &amp;quot;+ Create Bucket&amp;quot; 버튼을 선택합니다. 아래 내용 설정 후 화면 왼쪽 아래 Create 클릭합니다.</description>
    </item>
    
    <item>
      <title>Module 2: Linear Learner MNIST</title>
      <link>/kr/labs/sagemaker/_module_2.html</link>
      <pubDate>Tue, 15 Oct 2019 15:17:43 +0900</pubDate>
      
      <guid>/kr/labs/sagemaker/_module_2.html</guid>
      <description>SageMaker의 Jupyter 노트북 페이지 상단의 탭메뉴에서 “SageMaker Examples”를 클릭 후 샘플 노트북 목록에서 Introduction to Amazon Algorithms 을 선택합니다.
샘플 목록중 linear_learner_mnist.ipynb 를 찾아 우측의 Use 버튼을 클릭합니다. 다음과 같은 팝업창에서 Create copy 버튼을 클릭하여 관련 파일들을 사용자의 홈디렉토리로 복사를 진행합니다.
새로운 브라우저 탭에서 노트북이 오픈되면 준비가 완료됩니다.
모듈 실행중 아래 코드를 만나면 &amp;lt;your_s3_bucket_name_here&amp;gt; 부분에 모듈 1에서 생성한 s3 버킷의 이름(예: sagemaker-xxxxx)을 넣고 실행합니다. 부등호 부호(‘&amp;lt;’, ’&amp;gt;’)는 넣지 않습니다.
이 노트북의 소스 파일은  Github  에 공개되어 있습니다.</description>
    </item>
    
    <item>
      <title>Module 3: Linear Learner를 사용해 시계열 예측하기</title>
      <link>/kr/labs/sagemaker/_module_3.html</link>
      <pubDate>Tue, 15 Oct 2019 15:17:48 +0900</pubDate>
      
      <guid>/kr/labs/sagemaker/_module_3.html</guid>
      <description>SageMaker의 Jupyter 노트북 페이지 상단의 탭메뉴에서 “SageMaker Examples”를 클릭 후 샘플 노트북 목록에서 Introduction to Applying Machine Learning 을 선택합니다.
샘플 목록중 linear_time_series_forecast.ipynb 를 찾아 우측의 Use 버튼을 클릭합니다. 다음과 같은 팝업창에서 Create copy 버튼을 클릭하여 관련 파일들을 사용자의 홈디렉토리로 복사를 진행합니다.
새로운 브라우저 탭에서 노트북이 오픈되면 준비가 완료됩니다.
모듈 실행중 아래 코드를 만나면 &amp;lt;your_s3_bucket_name_here&amp;gt; 부분에 모듈 1에서 생성한 s3 버킷의 이름(예: sagemaker-xxxxx)을 넣고 실행합니다. 부등호 부호(‘&amp;lt;’, ’&amp;gt;’)는 넣지 않습니다.</description>
    </item>
    
    <item>
      <title>Module 4: BlazingText를 사용해 Text8 데이터셋을 Word2Vec 처리하기</title>
      <link>/kr/labs/sagemaker/_module_4.html</link>
      <pubDate>Tue, 15 Oct 2019 15:17:50 +0900</pubDate>
      
      <guid>/kr/labs/sagemaker/_module_4.html</guid>
      <description>SageMaker의 Jupyter 노트북 페이지 상단의 탭메뉴에서 “SageMaker Examples”를 클릭 후 샘플 노트북 목록에서 Introduction to Amazon Algorithms 을 선택합니다.
샘플 목록중 blazingtext_word2vec_text8.ipynb 를 찾아 우측의 Use 버튼을 클릭합니다. 다음과 같은 팝업창에서 Create copy 버튼을 클릭하여 관련 파일들을 사용자의 홈디렉토리로 복사를 진행합니다.
새로운 브라우저 탭에서 노트북이 오픈되면 준비가 완료됩니다.
모듈 실행중 아래 코드를 만나면 bucket = sess.default_bucket() 라인을 bucket = ‘&amp;lt;모듈 1에서 생성한 s3 버킷의 이름(예: sagemaker-xxxxx)&amp;gt;’ 으로 수정합니다. 부등호 부호(‘&amp;lt;’, ’&amp;gt;’)는 넣지 않습니다.</description>
    </item>
    
    <item>
      <title>Module 5: TensorFlow MNIST로 자동 모델 튜닝하기</title>
      <link>/kr/labs/sagemaker/_module_5.html</link>
      <pubDate>Tue, 15 Oct 2019 15:17:54 +0900</pubDate>
      
      <guid>/kr/labs/sagemaker/_module_5.html</guid>
      <description>이 모듈에서는 TensorFlow MNIST 이미지 분류 예제를 기반으로 SageMaker의 자동 모델 튜닝 기능을 실습합니다. 이 기능은 기계 학습 알고리즘의 최적의 하이퍼파라미터 (Hyperparameter) 값을 베이지안 최적화 기법을 통해 찾아줍니다.
SageMaker의 Jupyter 노트북 페이지 상단의 탭메뉴에서 SageMaker Examples 를 클릭합니다.
샘플 노트북 목록에서 Hyperparameter Tuning 을 선택합니다.
샘플 목록중 hpo_tensorflow_mnist.ipynb 를 찾아 우측의 Copy 버튼을 클릭합니다. 다음과 같은 팝업창에서 Create copy 버튼을 클릭하여 관련 파일들을 사용자의 홈디렉토리로 복사를 진행합니다.
새로운 브라우저 탭에서 노트북이 오픈되면 준비가 완료됩니다.</description>
    </item>
    
    <item>
      <title>Module 6: 자동 모델 튜닝 결과 분석하기</title>
      <link>/kr/labs/sagemaker/_module_6.html</link>
      <pubDate>Tue, 15 Oct 2019 15:17:57 +0900</pubDate>
      
      <guid>/kr/labs/sagemaker/_module_6.html</guid>
      <description>이 모듈에서는 앞에서 실행한 하이퍼파라미터 튜닝 작업의 결과를 해석하는 과정을 실습합니다. BokehJS와 pandas 라이브러리를 사용해 튜닝 결과를 Jupyter 노트북에서 테이블과 그래프 형태로 시각화해볼 수 있습니다.
SageMaker의 Jupyter 노트북 페이지 상단의 탭메뉴에서 SageMaker Examples 를 클릭합니다.
샘플 노트북 목록에서 Hyperparameter Tuning 을 선택합니다.
샘플 목록중 HPO_Analyze_TuningJob_Results.ipynb 를 찾아 우측의 Use 버튼을 클릭합니다. 다음과 같은 팝업창에서 Create copy 버튼을 클릭하여 관련 파일들을 사용자의 홈디렉토리로 복사를 진행합니다.
새로운 브라우저 탭에서 노트북이 오픈되면 준비가 완료됩니다.</description>
    </item>
    
    <item>
      <title>Module 7: PyTorch MNIST</title>
      <link>/kr/labs/sagemaker/_module_7.html</link>
      <pubDate>Tue, 15 Oct 2019 15:18:00 +0900</pubDate>
      
      <guid>/kr/labs/sagemaker/_module_7.html</guid>
      <description>이 모듈에서는 앞에서 실행한 하이퍼파라미터 튜닝 작업의 결과를 해석하는 과정을 실습합니다. BokehJS와 pandas 라이브러리를 사용해 튜닝 결과를 Jupyter 노트북에서 테이블과 그래프 형태로 시각화해볼 수 있습니다.
SageMaker의 Jupyter 노트북 페이지 상단의 탭메뉴에서 SageMaker Examples 를 클릭합니다.
샘플 노트북 목록에서 Sagemaker Python Sdk 를 선택합니다.
샘플 목록중 pytorch_mnist.ipynb 를 찾아 우측의 Copy 버튼을 클릭합니다. 다음과 같은 팝업창에서 Create copy 버튼을 클릭하여 관련 파일들을 사용자의 홈디렉토리로 복사를 진행합니다.
새로운 브라우저 탭에서 노트북이 오픈되면 준비가 완료됩니다.</description>
    </item>
    
    <item>
      <title>Module 8: Bring-your-own-container 기능 실습하기</title>
      <link>/kr/labs/sagemaker/_module_8.html</link>
      <pubDate>Tue, 15 Oct 2019 15:18:03 +0900</pubDate>
      
      <guid>/kr/labs/sagemaker/_module_8.html</guid>
      <description>Amazon SageMaker는 머신 러닝 모델을 훈련하고 배포하기 위해 Docker container를 사용합니다. SageMaker에서 현재 지원하고 있지 않는 알고리즘이나 머신 러닝 프레임워크, 또는 여러분이 로컬 환경에서 개발한 모델이라도 Docker container로 만들어 SageMaker에서 훈련하고 배포할 수 있습니다.
이번 모듈에서는 Scikit-Learn으로 작성된 모델을 컨테이너로 패키징 해봅니다. 이 내용은 AWS 블로그 Train and host Scikit-Learn models in Amazon SageMaker by building a Scikit Docker container 에 잘 설명되어 있습니다.
참고로 현재 SageMaker는 pre-built scikit-Learn 컨테이너를 제공하고 있기 때문에, Scikit-Learn 모델을 사용하기 위해 매번 이 모듈의 내용대로 새로운 컨테이너를 만들 필요는 없습니다.</description>
    </item>
    
    <item>
      <title>서비스 종료 가이드</title>
      <link>/kr/labs/sagemaker/_termination.html</link>
      <pubDate>Tue, 15 Oct 2019 15:18:03 +0900</pubDate>
      
      <guid>/kr/labs/sagemaker/_termination.html</guid>
      <description>AWS Event 엔진을 통해 임시로 생성하신 AWS Account의 경우 자동 삭제 되므로 아래의 작업이 필요없습니다.
 워크 샵 이후 발생 되는 비용을 방지하기 위해서 아래의 단계에 따라 모두 삭제하십시오.
 Notebook instance 먼저 Notebook instance를 stop 시킨 후에 삭제할 수 있습니다. 먼저 Actions 버튼을 누르시고 아래에 있는 stop을 선택합니다.
일단stop 이 되면 Actions 버튼에 Delete 메뉴가 활성화되어 선택할 수 있습니다.
만약 향후 사용을 위해 인스턴스를 삭제하지 않는다면, 스토리지 비용이 발생합니다.</description>
    </item>
    
    <item>
      <title>실습 가이드</title>
      <link>/kr/labs/apps/internet_facing_app/_lab_guide.html</link>
      <pubDate>Wed, 23 Oct 2019 15:44:53 +0900</pubDate>
      
      <guid>/kr/labs/apps/internet_facing_app/_lab_guide.html</guid>
      <description>Lab 개요 Amazon SageMaker는 데이터 사이언티스트와 개발자들이 쉽고 빠르게 구성, 학습하고 어떤 규모로든 기계 학습된 모델을 배포할 수 있도록 해주는 관리형 서비스 입니다. 이 워크샵을 통해 SageMaker notebook instance를 생성하고 샘플 Jupyter notebook을 실습하면서 SageMaker의 일부 기능을 알아보도록 합니다.
목표  SageMaker에 내장된 학습 기능을 사용하여 모델 훈련 Job을 생성 합니다.
 SageMaker의 endpoint 기능을 사용하여 생성된 모델이 예측에 사용될 수 있도록 endpoint를 생성합니다.
 머신 러닝이 정형 데이터(e.g. CSV 파일)와 비정형 데이터(e.</description>
    </item>
    
    <item>
      <title>Module 1: Notebook Instance 생성하기 </title>
      <link>/kr/labs/apps/internet_facing_app/_module_1.html</link>
      <pubDate>Wed, 23 Oct 2019 15:44:53 +0900</pubDate>
      
      <guid>/kr/labs/apps/internet_facing_app/_module_1.html</guid>
      <description>S3 Bucket생성하기 SageMaker는 S3를 데이터와 모델 저장소로 사용합니다. 여기서는 해당 목적으로 S3 Bucket을 생성합니다.
1) AWS 관리 콘솔 (https://console.aws.amazon.com/)에 Sign in 합니다.
2) AWS Services 리스트에서 S3 로 이동합니다.
3) + Create Bucket 버튼을 선택합니다.
4) 아래 내용 설정 후 화면 왼쪽 아래 Create 클릭합니다.
 Bucket name: sagemaker-{userid} [반드시 고유한 값 설정]
 Region : Asia Pacific (Seoul)
  Notebook instance 생성 1) AWS관리 콘솔에서 오른쪽 상단에서 Seoul Region선택 후 AWS Services 리스트에서 Amazon SageMaker 서비스를 선택합니다.</description>
    </item>
    
    <item>
      <title>Module 2: 실습용 코드 다운 받기</title>
      <link>/kr/labs/apps/internet_facing_app/_module_2.html</link>
      <pubDate>Wed, 23 Oct 2019 15:46:06 +0900</pubDate>
      
      <guid>/kr/labs/apps/internet_facing_app/_module_2.html</guid>
      <description>SageMaker의 Jupyter 노트북도 Linux 기반의 서버입니다. Jupyter 노트북에서 서버의 Terminal을 바로 실행하는 기능을 제공하고 있습니다. Figure 1와 같이 Terminal을 선택합니다.
Figure 1. SageMaker 노트북 서버에 접속하기 위한 Terminal 실행 화면.
Figure 2과 같이 터미널이 실행되면 아래의 shell 명령어들을 입력해서 실행합니다.
cd SageMaker/ git clone https://github.com/pilhokim/ai-ml-workshop Figure 2. git 싸이트에서 실습 코드 다운 받기.
코드를 다운 받고 난 후 Jupyter 노트북을 갱신 하면 (오른쪽 상단의 Refresh 아이콘을 클릭하세요) 새롭게 다운 받은 코드 폴더가 보입니다 (Figure 3 참조).</description>
    </item>
    
    <item>
      <title>Module 3: 영어-독어 번역 ML 모델 학습</title>
      <link>/kr/labs/apps/internet_facing_app/_module_3.html</link>
      <pubDate>Wed, 23 Oct 2019 15:50:20 +0900</pubDate>
      
      <guid>/kr/labs/apps/internet_facing_app/_module_3.html</guid>
      <description>Sequence-to-Sequence 알고리즘 노트북 열기 SageMaker가 지원하는 Seq2Seq 알고리즘은 MXNet 기반으로 개발된 Sockeye 알고리즘을 기반으로 개발된 최신의 Encoder-decoder 구조를 구현한 것으로 문서자동요약이나 언어 번역 서비스에 적용할 수 있습니다.
실습을 위해서 현재 설치되어 있는 SageMaker의 Jupyter 노트북의 예제들 중 아래의 디렉토리에 위한 Jupyter 노트북을 실행하시면 됩니다 (Figure 5 참조).
/aws-ai-ml-workshop-kr/src/release/2018-11/module8-SageMaker-Seq2Seq-Translation-English-German-InternetFacingApp.ipynb  Figure 5. Seq2Seq 노트북 디렉토리 위치.
Figure 6. 노트북 화면.
노트북에 대한 설명 본 노트북은 아래에 위치한 예제 노트북의 수정된 버전으로 미리 학습된 머신 러닝 모델을 사용하도록 바뀌었습니다.</description>
    </item>
    
    <item>
      <title>Module 4: SageMaker Endpoint 호출 Lambda 함수 개발하기</title>
      <link>/kr/labs/apps/internet_facing_app/_module_4.html</link>
      <pubDate>Wed, 23 Oct 2019 15:50:41 +0900</pubDate>
      
      <guid>/kr/labs/apps/internet_facing_app/_module_4.html</guid>
      <description>본 모듈에서는 방금 생성한 SageMaker의 Inference service를 호출하는 Lambda 함수를 개발해 보겠습니다.
Lambda 함수 생성하기  AWS 콘솔에서 Lambda를 선택 (https://console.aws.amazon.com/lambda)
 Create function 선택 (Figure 15 참조)
Figure 15. Lambda 함수 생성 화면.
Figure 16. Lambda 함수 생성 화면.
 Lambda 생성화면에서 Figure 16과 같이 Lambda 함수 이름과 Runtime (Python 3.6) 그리고 Role은 Create a custom role을 선택합니다.
 Name : MySeq2SeqInference으로 지정.
 Runtime: Python 3.6으로 지정</description>
    </item>
    
    <item>
      <title>Module 5: AWS API Gateway와 S3 Static Web Server를 이용한 웹서비스 연결하기</title>
      <link>/kr/labs/apps/internet_facing_app/_module_5.html</link>
      <pubDate>Wed, 23 Oct 2019 15:51:09 +0900</pubDate>
      
      <guid>/kr/labs/apps/internet_facing_app/_module_5.html</guid>
      <description>API Gateway 생성 및 Lambda함수 연결하기  Amazon API Gateway 콘솔 접속 (https://console.aws.amazon.com/apigateway/ )
 &amp;ldquo;Create API&amp;rdquo; -&amp;gt; &amp;ldquo;New API&amp;rdquo; 선택
 셋팅에서 새로운 API name 입력 (ex. SageMakerSeq2SeqLambdaGateWay)후 Endpoint Type을 Regional 로 선택 (Figure 32 참조).
Figure 32. Amazon API Gateway 생성 화면.
 바뀐 화면에서 Actions -&amp;gt; Create Method 선택
 하단의 콤보 박스에서 POST 선택 (Figure 33 참조)
 체크(V) 버튼 클릭해서 적용 (Figure 33 참조)</description>
    </item>
    
    <item>
      <title>서비스 종료 가이드</title>
      <link>/kr/labs/apps/internet_facing_app/_termination.html</link>
      <pubDate>Wed, 23 Oct 2019 15:49:29 +0900</pubDate>
      
      <guid>/kr/labs/apps/internet_facing_app/_termination.html</guid>
      <description>워크 샵 이후 발생 되는 비용을 방지하기 위해서 아래의 단계에 따라 모두 종료/삭제 해 주세요. 비용이 발생하더라도 실습하신 Internet-facing App을 유지하고 싶으신 경우에는 아래의 Notebook instance의 경우만 처리하시면 됩니다.
Notebook instance 만약 향후 사용을 위해 인스턴스를 저장하고 싶다면 stop을 하시면 됩니다. 이 경우 스토리지 비용은 발생합니다. 향후 다시 재가동 하시려면 Start button을 클릭하면 됩니다.
Figure 50. SageMaker 노트북 인스턴스 중단 화면.
삭제를 할 경우는 stop 되어 있는 해당 notebook instance를 선택하고 Action Dropdown 메뉴에서 Delete 선택 하시면 됩니다.</description>
    </item>
    
  </channel>
</rss>